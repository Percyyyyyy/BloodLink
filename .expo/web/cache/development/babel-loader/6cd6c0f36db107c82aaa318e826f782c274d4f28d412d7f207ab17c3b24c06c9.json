{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenzo\\\\OneDrive\\\\Bureau\\\\ESP\\\\BloodLink\\\\frontEnd\\\\composants\\\\Info.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  useEffect(function () {\n    fetchQuestions();\n  }, []);\n  function fetchQuestions() {\n    return _fetchQuestions.apply(this, arguments);\n  }\n  function _fetchQuestions() {\n    _fetchQuestions = _asyncToGenerator(function* () {\n      try {\n        var _yield$supabase$from$ = yield supabase.from('questionnaire_dons_questions').select(`\n            libelleQuestion, \n            questionnaire_dons_details_questions(idQuestion, libelleDetailQuestion)\n          `),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) {\n          console.error('erreur ', error);\n          return;\n        }\n        console.log('question ', data);\n        setQuestions(data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _fetchQuestions.apply(this, arguments);\n  }\n  return _jsxDEV(View, {\n    children: questions.map(function (question, index) {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          children: question.libelleQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this), question.questionnaire_dons_details_questions.map(function (detail, detailIndex) {\n          return _jsxDEV(View, {\n            children: _jsxDEV(Text, {\n              children: detail.libelleDetailQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, _this)\n          }, detailIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, _this);\n        }), _jsxDEV(Button, {\n          title: \"Oui\",\n          onPress: function onPress() {\n            return handleOptionSelect('Oui');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this), _jsxDEV(Button, {\n          title: \"Non\",\n          onPress: function onPress() {\n            return handleOptionSelect('Non');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this), _jsxDEV(Button, {\n          title: \"Je ne sais pas\",\n          onPress: function onPress() {\n            return handleOptionSelect('Je ne sais pas');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n  function handleOptionSelect(option) {\n    console.log('Option sélectionnée:', option);\n  }\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","supabase","jsxDEV","_jsxDEV","Info","_this","_useState","_useState2","_slicedToArray","questions","setQuestions","fetchQuestions","_fetchQuestions","apply","arguments","_asyncToGenerator","_yield$supabase$from$","from","select","data","error","console","log","children","map","question","index","libelleQuestion","fileName","_jsxFileName","lineNumber","columnNumber","questionnaire_dons_details_questions","detail","detailIndex","libelleDetailQuestion","title","onPress","handleOptionSelect","option"],"sources":["C:/Users/kenzo/OneDrive/Bureau/ESP/BloodLink/frontEnd/composants/Info.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport default function Info() {\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    async function fetchQuestions() {\r\n        try {\r\n            const { data, error } = await supabase.from('questionnaire_dons_questions').select(`\r\n            libelleQuestion, \r\n            questionnaire_dons_details_questions(idQuestion, libelleDetailQuestion)\r\n          `);\r\n\r\n            if (error) {\r\n                console.error('erreur ', error);\r\n                return;\r\n            }\r\n            console.log('question ', data);\r\n\r\n            setQuestions(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    return (\r\n        <View>\r\n            {questions.map((question, index) => (\r\n                <View key={index}>\r\n                    <Text>{question.libelleQuestion}</Text>\r\n                    {question.questionnaire_dons_details_questions.map((detail, detailIndex) => (\r\n                        <View key={detailIndex}>\r\n                            <Text>{detail.libelleDetailQuestion}</Text>\r\n                        </View>\r\n                    ))}\r\n                    <Button title=\"Oui\" onPress={() => handleOptionSelect('Oui')} />\r\n                    <Button title=\"Non\" onPress={() => handleOptionSelect('Non')} />\r\n                    <Button title=\"Je ne sais pas\" onPress={() => handleOptionSelect('Je ne sais pas')} />\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n    \r\n\r\n    function handleOptionSelect(option) {\r\n        // Ajoutez ici le code pour gérer la sélection de l'option\r\n        console.log('Option sélectionnée:', option);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}