{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenzo\\\\OneDrive\\\\Bureau\\\\ESP\\\\BloodLink\\\\frontEnd\\\\composants\\\\Info.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedOption = _useState4[0],\n    setSelectedOption = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedQuestionIndex = _useState6[0],\n    setSelectedQuestionIndex = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    answer = _useState8[0],\n    setAnswer = _useState8[1];\n  useEffect(function () {\n    fetchQuestions();\n  }, []);\n  function fetchQuestions() {\n    return _fetchQuestions.apply(this, arguments);\n  }\n  function _fetchQuestions() {\n    _fetchQuestions = _asyncToGenerator(function* () {\n      try {\n        var _yield$supabase$from$ = yield supabase.from('questionnaire_dons_questions').select(`\n            libelleQuestion, \n            questionnaire_dons_details_questions(idQuestion, libelleDetailQuestion)\n          `),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) {\n          console.error('erreur ', error);\n          return;\n        }\n        setQuestions(data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _fetchQuestions.apply(this, arguments);\n  }\n  function handleOptionSelect(option, index) {\n    setSelectedOption(option);\n    setSelectedQuestionIndex(index);\n  }\n  return _jsxDEV(ScrollView, {\n    children: questions.map(function (question, index) {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          children: question.libelleQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, _this), selectedQuestionIndex === index && selectedOption === 'Oui' && question.questionnaire_dons_details_questions.map(function (detail, detailIndex) {\n          return _jsxDEV(View, {\n            children: [_jsxDEV(Text, {\n              children: detail.libelleDetailQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, _this), _jsxDEV(TextInput, {\n              placeholder: \"R\\xE9ponse\",\n              onChangeText: function onChangeText(text) {\n                return setAnswer(text);\n              },\n              value: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, _this)]\n          }, detailIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, _this);\n        }), _jsxDEV(View, {\n          style: styles.buttonContainer,\n          children: [_jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleOptionSelect('Oui', index);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Oui\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleOptionSelect('Non', index);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Non\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleOptionSelect('Je ne sais pas', index);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Je ne sais pas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    width: '30%'\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","ScrollView","StyleSheet","TouchableOpacity","supabase","jsxDEV","_jsxDEV","Info","_this","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","selectedOption","setSelectedOption","_useState5","_useState6","selectedQuestionIndex","setSelectedQuestionIndex","_useState7","_useState8","answer","setAnswer","fetchQuestions","_fetchQuestions","apply","arguments","_asyncToGenerator","_yield$supabase$from$","from","select","data","error","console","handleOptionSelect","option","index","children","map","question","libelleQuestion","fileName","_jsxFileName","lineNumber","columnNumber","questionnaire_dons_details_questions","detail","detailIndex","libelleDetailQuestion","placeholder","onChangeText","text","value","style","styles","buttonContainer","button","onPress","buttonText","create","flexDirection","justifyContent","marginTop","backgroundColor","padding","borderRadius","width","color","textAlign"],"sources":["C:/Users/kenzo/OneDrive/Bureau/ESP/BloodLink/frontEnd/composants/Info.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, TextInput, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport default function Info() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(null);\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    async function fetchQuestions() {\r\n        try {\r\n            const { data, error } = await supabase.from('questionnaire_dons_questions').select(`\r\n            libelleQuestion, \r\n            questionnaire_dons_details_questions(idQuestion, libelleDetailQuestion)\r\n          `);\r\n\r\n            if (error) {\r\n                console.error('erreur ', error);\r\n                return;\r\n            }\r\n\r\n            setQuestions(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function handleOptionSelect(option, index) {\r\n        setSelectedOption(option);\r\n        setSelectedQuestionIndex(index);\r\n    }\r\n\r\n    return (\r\n        <ScrollView>\r\n            {questions.map((question, index) => (\r\n                <View key={index}>\r\n                    <Text>{question.libelleQuestion}</Text>\r\n                    {selectedQuestionIndex === index && selectedOption === 'Oui' && question.questionnaire_dons_details_questions.map((detail, detailIndex) => (\r\n                        <View key={detailIndex}>\r\n                            <Text>{detail.libelleDetailQuestion}</Text>\r\n                            <TextInput\r\n                                placeholder=\"RÃ©ponse\"\r\n                                onChangeText={(text) => setAnswer(text)}\r\n                                value={answer}\r\n                            />\r\n                        </View>\r\n                    ))}\r\n                   <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleOptionSelect('Oui', index)}>\r\n                            <Text style={styles.buttonText}>Oui</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleOptionSelect('Non', index)}>\r\n                            <Text style={styles.buttonText}>Non</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleOptionSelect('Je ne sais pas', index)}>\r\n                            <Text style={styles.buttonText}>Je ne sais pas</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            ))}\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: 'blue',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        width: '30%', // Modifiez la largeur selon vos besoins\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n});"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAC3B,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA4ClB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAA0DtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjEE,qBAAqB,GAAAD,UAAA;IAAEE,wBAAwB,GAAAF,UAAA;EACtD,IAAAG,UAAA,GAA4B1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAjCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExB1B,SAAS,CAAC,YAAM;IACZ6B,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAAC,SAEQA,cAAcA,CAAA;IAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,gBAAA;IAAAA,eAAA,GAAAG,iBAAA,CAA7B,aAAgC;MAC5B,IAAI;QACA,IAAAC,qBAAA,SAA8B3B,QAAQ,CAAC4B,IAAI,CAAC,8BAA8B,CAAC,CAACC,MAAM,CAAE;AAChG;AACA;AACA,WAAW,CAAC;UAHQC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;UAAEC,KAAK,GAAAJ,qBAAA,CAALI,KAAK;QAKnB,IAAIA,KAAK,EAAE;UACPC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;UAC/B;QACJ;QAEAtB,YAAY,CAACqB,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAAA,OAAAR,eAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,SAASQ,kBAAkBA,CAACC,MAAM,EAAEC,KAAK,EAAE;IACvCtB,iBAAiB,CAACqB,MAAM,CAAC;IACzBjB,wBAAwB,CAACkB,KAAK,CAAC;EACnC;EAEA,OACIjC,OAAA,CAACL,UAAU;IAAAuC,QAAA,EACN5B,SAAS,CAAC6B,GAAG,CAAC,UAACC,QAAQ,EAAEH,KAAK;MAAA,OAC3BjC,OAAA,CAACR,IAAI;QAAA0C,QAAA,GACDlC,OAAA,CAACP,IAAI;UAAAyC,QAAA,EAAEE,QAAQ,CAACC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAvC,KAAO,CAAC,EACtCY,qBAAqB,KAAKmB,KAAK,IAAIvB,cAAc,KAAK,KAAK,IAAI0B,QAAQ,CAACM,oCAAoC,CAACP,GAAG,CAAC,UAACQ,MAAM,EAAEC,WAAW;UAAA,OAClI5C,OAAA,CAACR,IAAI;YAAA0C,QAAA,GACDlC,OAAA,CAACP,IAAI;cAAAyC,QAAA,EAAES,MAAM,CAACE;YAAqB;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAvC,KAAO,CAAC,EAC3CF,OAAA,CAACN,SAAS;cACNoD,WAAW,EAAC,YAAS;cACrBC,YAAY,EAAE,SAAAA,aAACC,IAAI;gBAAA,OAAK7B,SAAS,CAAC6B,IAAI,CAAC;cAAA,CAAC;cACxCC,KAAK,EAAE/B;YAAO;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAvC,KACjB,CAAC;UAAA,GANK0C,WAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAvC,KAOhB,CAAC;QAAA,CACV,CAAC,EACHF,OAAA,CAACR,IAAI;UAAC0D,KAAK,EAAEC,MAAM,CAACC,eAAgB;UAAAlB,QAAA,GAC/BlC,OAAA,CAACH,gBAAgB;YAACqD,KAAK,EAAEC,MAAM,CAACE,MAAO;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMvB,kBAAkB,CAAC,KAAK,EAAEE,KAAK,CAAC;YAAA,CAAC;YAAAC,QAAA,EACpFlC,OAAA,CAACP,IAAI;cAACyD,KAAK,EAAEC,MAAM,CAACI,UAAW;cAAArB,QAAA,EAAC;YAAG;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAvC,KAAM;UAAC;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAvC,KAC5B,CAAC,EACnBF,OAAA,CAACH,gBAAgB;YAACqD,KAAK,EAAEC,MAAM,CAACE,MAAO;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMvB,kBAAkB,CAAC,KAAK,EAAEE,KAAK,CAAC;YAAA,CAAC;YAAAC,QAAA,EACpFlC,OAAA,CAACP,IAAI;cAACyD,KAAK,EAAEC,MAAM,CAACI,UAAW;cAAArB,QAAA,EAAC;YAAG;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAvC,KAAM;UAAC;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAvC,KAC5B,CAAC,EACnBF,OAAA,CAACH,gBAAgB;YAACqD,KAAK,EAAEC,MAAM,CAACE,MAAO;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMvB,kBAAkB,CAAC,gBAAgB,EAAEE,KAAK,CAAC;YAAA,CAAC;YAAAC,QAAA,EAC/FlC,OAAA,CAACP,IAAI;cAACyD,KAAK,EAAEC,MAAM,CAACI,UAAW;cAAArB,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAvC,KAAM;UAAC;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAvC,KACvC,CAAC;QAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAvC,KACjB,CAAC;MAAA,GAtBA+B,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAvC,KAuBV,CAAC;IAAA,CACV;EAAC;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAErB;AAEA,IAAMU,MAAM,GAAGvD,UAAU,CAAC4D,MAAM,CAAC;EAC7BJ,eAAe,EAAE;IACbK,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,cAAc;IAC9BC,SAAS,EAAE;EACf,CAAC;EACDN,MAAM,EAAE;IACJO,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE;EACX,CAAC;EACDR,UAAU,EAAE;IACRS,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}