{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenzo\\\\OneDrive\\\\Bureau\\\\ESP\\\\BloodLink\\\\frontEnd\\\\composants\\\\Info.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  useEffect(function () {\n    fetchQuestions();\n  }, []);\n  function fetchQuestions() {\n    return _fetchQuestions.apply(this, arguments);\n  }\n  function _fetchQuestions() {\n    _fetchQuestions = _asyncToGenerator(function* () {\n      try {\n        var _yield$supabase$from$ = yield supabase.from('questionnaire_dons_questions AS qd').select(`\n                qd.\"idQuestion\",\n                qd.\"libelleQuestion\",\n                dqd.\"idQuestion\" AS \"usedInDetails\",\n                dqd.\"libelleDetailQuestion\" AS \"detailsLibelleQuestion\"\n            `).leftOuterJoin('questionnaire_dons_details_questions AS dqd', 'qd.\"idQuestion\"', 'dqd.\"idQuestion\"').order('qd.\"idQuestion\"'),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) {\n          console.error('erreur ', error);\n          return;\n        }\n        console.log('question ', data);\n        setQuestions(data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _fetchQuestions.apply(this, arguments);\n  }\n  return _jsxDEV(View, {\n    children: questions.map(function (question, index) {\n      return _jsxDEV(View, {\n        children: [_jsxDEV(Text, {\n          children: question.libelleQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this), _jsxDEV(Button, {\n          title: \"Oui\",\n          onPress: function onPress() {\n            return handleOptionSelect('Oui');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this), _jsxDEV(Button, {\n          title: \"Non\",\n          onPress: function onPress() {\n            return handleOptionSelect('Non');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this), _jsxDEV(Button, {\n          title: \"Je ne sais pas\",\n          onPress: function onPress() {\n            return handleOptionSelect('Je ne sais pas');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n  function handleOptionSelect(option) {\n    console.log('Option sélectionnée:', option);\n  }\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","supabase","jsxDEV","_jsxDEV","Info","_this","_useState","_useState2","_slicedToArray","questions","setQuestions","fetchQuestions","_fetchQuestions","apply","arguments","_asyncToGenerator","_yield$supabase$from$","from","select","leftOuterJoin","order","data","error","console","log","children","map","question","index","libelleQuestion","fileName","_jsxFileName","lineNumber","columnNumber","title","onPress","handleOptionSelect","option"],"sources":["C:/Users/kenzo/OneDrive/Bureau/ESP/BloodLink/frontEnd/composants/Info.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nexport default function Info() {\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    async function fetchQuestions() {\r\n        try {\r\n            const { data, error } = await supabase\r\n                .from('questionnaire_dons_questions AS qd')\r\n                .select(`\r\n                qd.\"idQuestion\",\r\n                qd.\"libelleQuestion\",\r\n                dqd.\"idQuestion\" AS \"usedInDetails\",\r\n                dqd.\"libelleDetailQuestion\" AS \"detailsLibelleQuestion\"\r\n            `)\r\n                .leftOuterJoin(\r\n                    'questionnaire_dons_details_questions AS dqd',\r\n                    'qd.\"idQuestion\"',\r\n                    'dqd.\"idQuestion\"'\r\n                )\r\n                .order('qd.\"idQuestion\"');\r\n\r\n\r\n            if (error) {\r\n                console.error('erreur ', error);\r\n                return;\r\n            }\r\n            console.log('question ', data);\r\n\r\n            setQuestions(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            {questions.map((question, index) => (\r\n                <View key={index}>\r\n                    <Text>{question.libelleQuestion}</Text>\r\n                    <Button title=\"Oui\" onPress={() => handleOptionSelect('Oui')} />\r\n                    <Button title=\"Non\" onPress={() => handleOptionSelect('Non')} />\r\n                    <Button title=\"Je ne sais pas\" onPress={() => handleOptionSelect('Je ne sais pas')} />\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n\r\n    function handleOptionSelect(option) {\r\n        // Ajoutez ici le code pour gérer la sélection de l'option\r\n        console.log('Option sélectionnée:', option);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}