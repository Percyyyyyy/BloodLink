{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenzo\\\\OneDrive\\\\Bureau\\\\ESP\\\\BloodLink\\\\frontEnd\\\\composants\\\\Info.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  var _this = this;\n  var RedBadge = function RedBadge() {\n    return _jsxDEV(View, {\n      style: styles.redBadge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, _this);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.ligne1,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.buttonLigne1,\n        children: _jsxDEV(Text, {\n          style: styles.categorieText,\n          children: \"Voyage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.buttonLigne1,\n        children: _jsxDEV(Text, {\n          style: styles.categorieText,\n          children: \"Sexe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.ligne2,\n      children: _jsxDEV(TouchableOpacity, {\n        style: styles.buttonLigne2,\n        children: [_jsxDEV(View, {\n          style: styles.categorieContainer,\n          children: _jsxDEV(Text, {\n            style: styles.categorieText,\n            children: \"Sant\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), _jsxDEV(View, {\n          style: styles.statutSantéContainer,\n          children: [_jsxDEV(View, {\n            style: styles.statutSanté,\n            children: [_jsxDEV(Text, {\n              style: styles.textStatutSanté,\n              children: \"Etat de sant\\xE9 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), _jsxDEV(RedBadge, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), _jsxDEV(View, {\n            style: styles.statutSanté,\n            children: [_jsxDEV(Text, {\n              style: styles.textStatutSanté,\n              children: \"Vaccin :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), _jsxDEV(RedBadge, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 81\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), _jsxDEV(View, {\n            style: styles.statutSanté,\n            children: [_jsxDEV(Text, {\n              style: styles.textStatutSanté,\n              children: \"Soin re\\xE7us :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), _jsxDEV(RedBadge, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 85\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), _jsxDEV(View, {\n            style: styles.statutSanté,\n            children: [_jsxDEV(Text, {\n              style: styles.textStatutSanté,\n              children: \"Historique de sant\\xE9 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), _jsxDEV(RedBadge, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 94\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), _jsxDEV(View, {\n            style: styles.statutSanté,\n            children: [_jsxDEV(Text, {\n              style: styles.textStatutSanté,\n              children: \"Autres :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), _jsxDEV(RedBadge, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 81\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    backgroundColor: 'green',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  categorieContainer: {\n    flex: 0.1,\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center'\n  },\n  categorieText: {\n    textAlign: 'center',\n    fontSize: 20\n  },\n  statutSantéContainer: {\n    flex: 0.9\n  },\n  ligne1: {\n    flexDirection: 'row',\n    padding: 10,\n    justifyContent: 'space-between'\n  },\n  ligne2: {\n    padding: 10,\n    height: '40%'\n  },\n  buttonLigne1: {\n    padding: 10,\n    borderRadius: 5,\n    width: '48%',\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  buttonLigne2: {\n    padding: 10,\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    flex: 1,\n    flexDirection: 'column'\n  },\n  redBadge: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    backgroundColor: 'red'\n  },\n  statutSanté: {\n    flexDirection: 'row'\n  },\n  textStatutSanté: {\n    textAlign: 'center',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","jsxDEV","_jsxDEV","Info","_this","RedBadge","style","styles","redBadge","fileName","_jsxFileName","lineNumber","columnNumber","container","children","ligne1","buttonLigne1","categorieText","ligne2","buttonLigne2","categorieContainer","statutSantéContainer","statutSanté","textStatutSanté","create","height","backgroundColor","alignItems","justifyContent","flex","flexWrap","alignContent","textAlign","fontSize","flexDirection","padding","borderRadius","width","borderColor","borderWidth"],"sources":["C:/Users/kenzo/OneDrive/Bureau/ESP/BloodLink/frontEnd/composants/Info.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, TextInput, ScrollView, StyleSheet, TouchableOpacity, Touchable } from 'react-native';\r\nimport { supabase } from '../lib/supabase';\r\n\r\n\r\nexport default function Info() {\r\n    // const [questions, setQuestions] = useState([]);\r\n    // const [selectedOption, setSelectedOption] = useState(null);\r\n    // const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(null);\r\n    // const [answer, setAnswer] = useState('');\r\n    // const [buttonColors, setButtonColors] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     fetchQuestions();\r\n    // }, []);\r\n\r\n    // async function fetchQuestions() {\r\n    //     try {\r\n    //         const { data, error } = await supabase.from('questionnaire_dons_questions').select(`\r\n    //         libelleQuestion, \r\n    //         questionnaire_dons_details_questions(idQuestion, libelleDetailQuestion)`);\r\n    //         if (error) {\r\n    //             console.error('erreur ', error);\r\n    //             return;\r\n    //         }\r\n    //         const initialButtonColors = new Array(data.length).fill({ oui: 'white', non: 'white', idk: 'white' });\r\n    //         setButtonColors(initialButtonColors);\r\n    //         setQuestions(data);\r\n    //     } catch (error) {\r\n    //         console.error(error);\r\n    //     }\r\n    // }\r\n\r\n    // function handleOptionSelect(option, index) {\r\n    //     setSelectedOption(option);\r\n    //     setSelectedQuestionIndex(index);\r\n    //     setButtonColors(prevColors => {\r\n    //         const updatedColors = [...prevColors];\r\n    //         const selectedQuestionColors = { oui: 'white', non: 'white', idk: 'white' };\r\n    //         if (option === 'Oui') {\r\n    //             selectedQuestionColors.oui = '#0BADD5';\r\n    //         } else if (option === 'Non') {\r\n    //             selectedQuestionColors.non = '#0BADD5';\r\n    //         } else if (option === 'Je ne sais pas') {\r\n    //             selectedQuestionColors.idk = '#0BADD5';\r\n    //         }\r\n\r\n    //         updatedColors[index] = selectedQuestionColors;\r\n    //         return updatedColors;\r\n    //     });\r\n    // }\r\n    const RedBadge = () => {\r\n        return <View style={styles.redBadge}></View>;\r\n    };\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.ligne1}>\r\n                <TouchableOpacity style={styles.buttonLigne1}>\r\n                    <Text style={styles.categorieText}>Voyage</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.buttonLigne1}>\r\n                    <Text style={styles.categorieText}>Sexe</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.ligne2}>\r\n                <TouchableOpacity style={styles.buttonLigne2}>\r\n                    <View style={styles.categorieContainer}>\r\n                        <Text style={styles.categorieText}>Santé</Text>\r\n                    </View>\r\n                    <View style={styles.statutSantéContainer}>\r\n                        <View style={styles.statutSanté}>\r\n                            <Text style={styles.textStatutSanté}>Etat de santé :</Text><RedBadge />\r\n                        </View>\r\n                        <View style={styles.statutSanté}>\r\n                            <Text style={styles.textStatutSanté}>Vaccin :</Text><RedBadge />\r\n                        </View>\r\n                        <View style={styles.statutSanté}>\r\n                            <Text style={styles.textStatutSanté}>Soin reçus :</Text><RedBadge />\r\n                        </View>\r\n                        <View style={styles.statutSanté}>\r\n                            <Text style={styles.textStatutSanté}>Historique de santé :</Text><RedBadge />\r\n                        </View>\r\n                        <View style={styles.statutSanté}>\r\n                            <Text style={styles.textStatutSanté}>Autres :</Text><RedBadge />\r\n                        </View>\r\n                    </View>\r\n\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n\r\n        // <ScrollView>\r\n        //     {questions.map((question, index) => (\r\n        //         <View key={index}>\r\n        //             <Text>{question.libelleQuestion}</Text>\r\n        //             {selectedQuestionIndex === index && selectedOption === 'Oui' && question.questionnaire_dons_details_questions.map((detail, detailIndex) => (\r\n        //                 <View key={detailIndex}>\r\n        //                     <Text>{detail.libelleDetailQuestion}</Text>\r\n        //                     <TextInput\r\n        //                         placeholder=\"Réponse\"\r\n        //                         onChangeText={(text) => setAnswer(text)}\r\n        //                         value={answer}\r\n        //                     />\r\n        //                 </View>\r\n        //             ))}\r\n        //            <View style={styles.buttonContainer}>\r\n        //                 <TouchableOpacity   style={[styles.buttonOui, { backgroundColor: buttonColors[index].oui }]}   onPress={() => handleOptionSelect('Oui', index)}>\r\n        //                     <Text style={styles.buttonText}>Oui</Text>\r\n        //                 </TouchableOpacity>\r\n        //                 <TouchableOpacity  style={[styles.buttonIDK, { backgroundColor: buttonColors[index].idk }]}  onPress={() => handleOptionSelect('Je ne sais pas', index)}>\r\n        //                     <Text style={styles.buttonTextIDK}>Je ne sais pas</Text>\r\n        //                 </TouchableOpacity>\r\n        //                 <TouchableOpacity  style={[styles.buttonNon, { backgroundColor: buttonColors[index].non }]}  onPress={() => handleOptionSelect('Non', index)}>\r\n        //                     <Text style={styles.buttonText}>Non</Text>\r\n        //                 </TouchableOpacity>                    \r\n        //             </View>\r\n        //         </View>\r\n        //     ))}\r\n        // </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: '100%',\r\n        backgroundColor: 'green',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    categorieContainer:{\r\n        flex : 0.1,\r\n        flexWrap : 'wrap',\r\n        justifyContent :'center',\r\n        alignContent : 'center'\r\n    },\r\n    categorieText: {\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n    },\r\n    statutSantéContainer: {\r\n        flex: 0.9\r\n    },\r\n    ligne1: {\r\n\r\n        flexDirection: 'row',\r\n        padding: 10,\r\n        justifyContent: 'space-between'\r\n    },\r\n    ligne2: {\r\n\r\n        padding: 10,\r\n        height : '40%'\r\n    },\r\n    buttonLigne1: {\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        width: '48%', // Modifiez la largeur selon vos besoins\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n\r\n    },\r\n    buttonLigne2: {\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        \r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        flex: 1,\r\n        flexDirection : 'column',\r\n    },\r\n    redBadge: {\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: 10,\r\n        backgroundColor: 'red',\r\n    },\r\n    statutSanté: {\r\n        flexDirection: 'row',\r\n    },\r\n    textStatutSanté: {\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}