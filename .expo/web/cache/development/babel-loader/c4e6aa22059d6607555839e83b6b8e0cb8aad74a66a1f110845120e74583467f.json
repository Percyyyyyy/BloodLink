{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport ReadOnlyCharacterData from './ReadOnlyCharacterData';\nimport ReadOnlyNode from './ReadOnlyNode';\nvar ReadOnlyText = function (_ReadOnlyCharacterDat) {\n  _inherits(ReadOnlyText, _ReadOnlyCharacterDat);\n  function ReadOnlyText() {\n    _classCallCheck(this, ReadOnlyText);\n    return _callSuper(this, ReadOnlyText, arguments);\n  }\n  _createClass(ReadOnlyText, [{\n    key: \"nodeName\",\n    get: function get() {\n      return '#text';\n    }\n  }, {\n    key: \"nodeType\",\n    get: function get() {\n      return ReadOnlyNode.TEXT_NODE;\n    }\n  }]);\n  return ReadOnlyText;\n}(ReadOnlyCharacterData);\nexport { ReadOnlyText as default };","map":{"version":3,"names":["ReadOnlyCharacterData","ReadOnlyNode","ReadOnlyText","_ReadOnlyCharacterDat","_inherits","_classCallCheck","_callSuper","arguments","_createClass","key","get","TEXT_NODE","default"],"sources":["C:/Users/kenzo/OneDrive/Bureau/ESP/BloodLink/frontEnd/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyText.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport ReadOnlyCharacterData from './ReadOnlyCharacterData';\nimport ReadOnlyNode from './ReadOnlyNode';\n\nexport default class ReadOnlyText extends ReadOnlyCharacterData {\n  /**\n   * @override\n   */\n  get nodeName(): string {\n    return '#text';\n  }\n\n  /**\n   * @override\n   */\n  get nodeType(): number {\n    return ReadOnlyNode.TEXT_NODE;\n  }\n}\n"],"mappings":";;;;;;;AAYA,OAAOA,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,YAAY,MAAM,gBAAgB;AAAC,IAErBC,YAAY,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,qBAAA;EAAA,SAAAD,aAAA;IAAAG,eAAA,OAAAH,YAAA;IAAA,OAAAI,UAAA,OAAAJ,YAAA,EAAAK,SAAA;EAAA;EAAAC,YAAA,CAAAN,YAAA;IAAAO,GAAA;IAAAC,GAAA,EAI/B,SAAAA,IAAA,EAAuB;MACrB,OAAO,OAAO;IAChB;EAAC;IAAAD,GAAA;IAAAC,GAAA,EAKD,SAAAA,IAAA,EAAuB;MACrB,OAAOT,YAAY,CAACU,SAAS;IAC/B;EAAC;EAAA,OAAAT,YAAA;AAAA,EAbuCF,qBAAqB;AAAA,SAA1CE,YAAY,IAAAU,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}